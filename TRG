CREATE OR REPLACE FUNCTION FN_CALCULAR_EDAD 
( fechaNacimiento postulante.fecha_nacimiento%type ) return number 
is 
    edad number(3);
begin
    select
        extract (YEAR FROM sysdate) - extract (YEAR FROM fechaNacimiento)
        into edad
    from dual;
    return edad;
end FN_CALCULAR_EDAD;

create or replace function fn_calcular_ptje_edad
( fechaNacimiento   postulante.fecha_nacimiento%type ) return number
is
    edad         number(3);
    puntaje_edad number(5);
begin
    edad := FN_CALCULAR_EDAD(fechaNacimiento);
    select
        puntaje INTO puntaje_edad 
    from PUNTAJE_EDAD
    where edad between TRAMO_INF and TRAMO_SUP;
    return puntaje_edad;
end fn_calcular_ptje_edad;


create or replace function fn_cantidad_cargas
( runPostulante     postulante.run_postulante%type ) return number
is
    cantidad_cargas number(3);
begin
    BEGIN
        select 
            count(run_carga) into cantidad_cargas
        from CARGA_FAMILIAR
        where run_postulante = runPostulante
        group by run_postulante;
        
        EXCEPTION 
            when NO_DATA_FOUND then
            cantidad_cargas := 0;
    END;
    return cantidad_cargas;
end fn_cantidad_cargas;

create or replace function fn_ptje_cargas
( cantidad_cargasx number) return number
is
    puntaje_cargas  number(3);
begin 
    begin
        select 
            puntaje into puntaje_cargas
        from puntaje_carga_familiar
        where cantidad_cargasx between TRAMO_INF and TRAMO_SUP;
        
        EXCEPTION
            when NO_DATA_FOUND then
                puntaje_cargas := 0;
    end;
    return puntaje_cargas;
end fn_ptje_cargas;


create or replace function fn_estado_civil
( id_estado_civil_post number) return varchar2
is
    estado_civil varchar2(100);
begin
    select
        descripcion into estado_civil
    from ESTADO_CIVIL
    where id_estado_civil =  id_estado_civil_post;
    return estado_civil;
end fn_estado_civil;


create or replace function fn_estado_civil
( id_estado_civil_post number) return varchar2
is
    puntajeEstadoCivil number(10);
begin
    select
        puntaje_est_civil into puntajeEstadoCivil
    from ESTADO_CIVIL
    where id_estado_civil = id_estado_civil_post;
    return puntajeEstadoCivil;
end fn_estado_civil;

create or replace function fn_pueblo_ind
(id_acreditacionx number) return varchar2
is
    descripcion varchar2(80);
begin
    select
        descripcion into descripcion
    from ACREDITACION_INDIGENA
    where id_acreditacion = id_acreditacionx;
    return descripcion;
end fn_pueblo_ind;


CREATE OR REPLACE trigger TRG_CALCULA_PUNTAJES 
after INSERT or UPDATE on POSTULANTE
for each row
declare
    run_post                postulante.run_postulante%type;
    edad                    number(10);
    puntaje_edad            number(10);
    cantidad_cargas         number(10);
    ptje_cantidad_cargas    number(10);
    estado_civil            varchar2(45);
    ptje_estado_civil       number(10);
    acred_indg              varchar2(45);
    ptje_acred_ind          number(10);
    
begin
    run_post := :new.run_postulante;
    edad := FN_CALCULAR_EDAD(:new.fecha_nacimiento);
    puntaje_edad := fn_calcular_ptje_edad(:new.fecha_nacimiento);
    cantidad_cargas := fn_cantidad_cargas(:new.run_postulante);
    ptje_cantidad_cargas := fn_ptje_cargas( fn_cantidad_cargas(cantidad_cargas) );
    estado_civil := fn_estado_civil(:new.id_estado_civil);
    ptje_estado_civil := fn_estado_civil(:new.id_estado_civil);
    acred_indg := fn_pueblo_ind(:new.id_acreditacion);
    
    INSERT INTO PUNTAJE_POSTULANTE (run_postulante, edad, puntaje_edad, cantidad_cargas, puntaje_cargas, estado_civil, puntaje_estado_civil, pueblo_ind_orig)
    VALUES (run_post, edad, puntaje_edad, cantidad_cargas, ptje_cantidad_cargas, estado_civil, ptje_estado_civil, acred_indg);
end;
